name: Build & Deploy (Reusable)

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      environment:
        default: prod
        type: string

permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: ${{ inputs.tag }}
  GHCR_PHP: ${{ vars.GHCR_PHP }}
  GHCR_NGINX: ${{ vars.GHCR_NGINX }}
  GHCR_USERNAME: ${{ vars.GHCR_USERNAME }}

jobs:
  build-and-push-image:
    name: Build and Push image
    environment:
      name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ secrets.PAT_WORKFLOW_REPO }}

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v2

      - name: Load .env from 1P
        id: load-secrets
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          SECRET_PATH: ${{ secrets.SECRET_PATH }}
        run: op read "$SECRET_PATH" > .env

      - name: Build PHP image
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: bebou_php_prod
          tags: ${{ env.GHCR_PHP }}:${{ env.IMAGE_TAG }}
          push: true

      - name: Build Nginx image
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: bebou_nginx
          tags: ${{ env.GHCR_NGINX }}:${{ env.IMAGE_TAG }}
          push: true

  deploy:
    name: Deploy to server
    needs: [ build-and-push-image ]
    environment:
      name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Run command on server
        uses: appleboy/ssh-action@v1
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: IMAGE_TAG
          script: |
            cd bebou-app
            wget -O traefik/static-config.yaml https://raw.githubusercontent.com/rmaud-me/bebou-app/refs/tags/v$IMAGE_TAG/.infra/traefik/static-config.yaml
            wget -O compose.yaml https://raw.githubusercontent.com/rmaud-me/bebou-app/refs/tags/v$IMAGE_TAG/.infra/compose.yaml
            export IMAGE_TAG=$IMAGE_TAG && docker rollout php && docker rollout nginx
